<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lagou.dao.RoleMapper">
    <!--查询所有角色和条件进行查询-->
    <select id="findAllRole" parameterType="com.lagou.domain.Role" resultType="com.lagou.domain.Role">
        select * from roles
        <where>
            <if test="name!=null and name!=''">
                and name =#{name}
            </if>
        </where>
    </select>

    <!--添加角色-->
    <insert id="saveRole" parameterType="com.lagou.domain.Role">
        insert into Roles values(null,#{code},#{name},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--更新角色-->
    <update id="updateRole" parameterType="com.lagou.domain.Role" >
        update Roles
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">
                code = #{code},
            </if>

            <if test="name != null and name != ''">
                name = #{name},
            </if>

            <if test="description != null and description != ''">
                description = #{description},
            </if>

            <if test="createdTime != null">
                created_time=#{createdTime},
            </if>

            <if test="updatedTime != null">
                updated_time=#{updatedTime},
            </if>

            <if test="createdBy != null">
                created_by=#{createdBy},
            </if>

            <if test="updatedBy != updatedBy">
                updated_by=#{updatedBy},
            </if>

        </trim>

        <where>
            <if test="id != null and id != '' ">id = #{id}</if>
        </where>
    </update>

    <!--根据角色ID查询该角色关联的菜单信息ID-->
    <select id="findMenuByRoleId" parameterType="int" resultType="int">
        SELECT m.id
        FROM roles r INNER JOIN role_menu_relation rm ON r.id=rm.role_id
                     INNER JOIN menu m ON m.id=rm.menu_id WHERE r.id=#{id}
    </select>

    <!--根据roleid清空中间表的关联关系-->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id=#{rid}
    </delete>

    <!--为角色分配菜单信息-->
    <insert id="roleContextMenu" parameterType="com.lagou.domain.Role_menu_relation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!--删除角色-->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id=#{roleid}
    </delete>

    <!--查询当前角色拥有的资源分类信息-->
   <!-- <select id="findResourceCategoryByRoleId" parameterType="int" resultMap="ResourceResultMap">
        SELECT rc.id,rc.name FROM resource_category rc LEFT JOIN roles r ON rc.id=r.id WHERE r.id=#{roleId}
    </select>-->

    <!--查询当前角色拥有的资源信息-->
    <resultMap id="ResourceResultMap" type="com.lagou.domain.ResourceCategory">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="sort" column="sort"></result>
        <result property="createdTime" column="created_time"></result>
        <result property="updatedTime" column="updated_time"></result>
        <result property="createdBy" column="created_by"></result>
        <result property="updatedBy" column="updated_by"></result>

        <collection property="resourceList" ofType="com.lagou.domain.Resource">
            <id property="id" column="id"></id>
            <result property="name" column="name"></result>
            <result property="url" column="url"></result>
            <result property="categoryId" column="category_id"></result>
            <result property="description" column="description"></result>
            <result property="createdTime" column="created_time"></result>
            <result property="updatedTime" column="updated_time"></result>
            <result property="createdBy" column="created_by"></result>
            <result property="updatedBy" column="updated_by"></result>
        </collection>
    </resultMap>
    <!--获取当前角色拥有的资源信息-->
    <select id="findResourceCategoryByRoleId" parameterType="int" resultMap="ResourceResultMap">
        SELECT DISTINCT r.*,ro.id,ro.name
        FROM resource r INNER JOIN role_resource_relation rr ON r.id=rr.resource_id
                        INNER JOIN roles ro ON ro.id=rr.role_id
        WHERE ro.id =#{roleId}
    </select>

    <!-- 获取角色拥有的资源分类数据   -->
    <resultMap id="ResourceCate" type="com.lagou.domain.ResourceCategory">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <select id="findRoleHaveResourceCate" parameterType="int" resultMap="ResourceCate">
        SELECT
            rc.id,
            rc.name
        FROM resource_category	rc LEFT JOIN resource r ON rc.id = r.category_id
                                     LEFT JOIN role_resource_relation rrr ON r.id = rrr.resource_id LEFT JOIN
             roles rs ON rrr.role_id = rs.id WHERE rs.id = #{id} GROUP BY  rc.id;
    </select>

    <!--  获取角色拥有的资源数据  -->
    <select id="findRoleHaveResource" parameterType="int" resultType="com.lagou.domain.Resource">
        SELECT
            rc.`id`,
            rc.`name`,
            rc.`category_id`,
            rc.`url`,
            rc.`description`
        FROM roles r  LEFT JOIN role_resource_relation rrr ON r.`id` = rrr.`role_id`
                      LEFT JOIN resource rc ON rrr.`resource_id` = rc.`id` WHERE r.id = #{id};
    </select>

    <!--  删除角色关联的资源数据 -->
    <delete id="deleteRoleContextResource" parameterType="int">
        DELETE FROM role_resource_relation WHERE role_id = #{id};
    </delete>

    <!-- 为角色分配资源   -->
    <insert id="roleContextResource" parameterType="com.lagou.domain.RoleResourceRelation">
        INSERT INTO role_resource_relation
        VALUES(NULL,#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

</mapper>